{
  "_args": [
    [
      {
        "raw": "miniprogram-sm-crypto",
        "scope": null,
        "escapedName": "miniprogram-sm-crypto",
        "name": "miniprogram-sm-crypto",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\HB\\WeChatProjects\\miniprogram-2"
    ]
  ],
  "_from": "miniprogram-sm-crypto",
  "_hasShrinkwrap": false,
  "_id": "miniprogram-sm-crypto@0.1.0",
  "_location": "/miniprogram-sm-crypto",
  "_nodeVersion": "10.16.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/miniprogram-sm-crypto_0.1.0_1569485363779_0.8685510618054348"
  },
  "_npmUser": {
    "name": "wechat-miniprogram",
    "email": "wx-miniprogram@qq.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "miniprogram-sm-crypto",
    "scope": null,
    "escapedName": "miniprogram-sm-crypto",
    "name": "miniprogram-sm-crypto",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/miniprogram-sm-crypto/-/miniprogram-sm-crypto-0.1.0.tgz",
  "_shasum": "5ad07ba33f6d6395a30935394d0a9d52d65496a7",
  "_shrinkwrap": null,
  "_spec": "miniprogram-sm-crypto",
  "_where": "C:\\Users\\HB\\WeChatProjects\\miniprogram-2",
  "author": {
    "name": "wechat-miniprogram"
  },
  "bugs": {
    "url": "https://github.com/wechat-miniprogram/sm-crypto/issues"
  },
  "dependencies": {
    "jsbn": "^1.1.0"
  },
  "description": "miniprogram js library",
  "devDependencies": {
    "babel-core": "^6.26.3",
    "babel-loader": "^7.1.5",
    "babel-plugin-module-resolver": "^3.1.1",
    "babel-preset-env": "^1.7.0",
    "colors": "^1.3.1",
    "eslint": "^5.3.0",
    "eslint-config-airbnb-base": "13.1.0",
    "eslint-loader": "^2.1.0",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-node": "^7.0.1",
    "eslint-plugin-promise": "^3.8.0",
    "gulp": "^4.0.0",
    "gulp-clean": "^0.4.0",
    "gulp-if": "^2.0.2",
    "gulp-install": "^1.1.0",
    "gulp-less": "^3.5.0",
    "gulp-rename": "^1.4.0",
    "gulp-sourcemaps": "^2.6.4",
    "j-component": "git+https://github.com/JuneAndGreen/j-component.git",
    "jest": "^23.5.0",
    "through2": "^2.0.3",
    "webpack": "^4.16.5",
    "webpack-node-externals": "^1.7.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-LVqqteGNCarEepLezmKVMxuD1V795EIN1+Js4SU2nWEqnH50mwv93Vivp3F6LIWFMLE9Il4Cow1QIoqgoOTzyA==",
    "shasum": "5ad07ba33f6d6395a30935394d0a9d52d65496a7",
    "tarball": "https://registry.npmjs.org/miniprogram-sm-crypto/-/miniprogram-sm-crypto-0.1.0.tgz",
    "fileCount": 17,
    "unpackedSize": 112308,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdjHI0CRA9TVsSAnZWagAAJJsP/R8OXmey6CSurnRmDiWp\nYBtkZad+PkqKYDdICE+Vh+7DupAmbdRHU3KAkSjigoWy+ss0CrT+8nm5FdF4\nb8PRtvVoBOhEhwONxNW7nBtYl+ptAgzWkpsIXKVeZ2Z7+WZroLmUKupmK7vS\ncUJuPFBuvgytxlWcNxM902WWILykdr/yX+fElA8H9tR1wirGoBqTFsU3bFgw\ncvwcMddoFdDqu3UWk1V2MLpU9B5FnLlGpDp8aY5ETVS99anJpUlZwKlAmpYp\niR05u1duI+ZQU3x5PFoG4rEnOtVPOYQbYxYIHtLyWTY2zfHxPTvx1O79IeXW\nm8dLjNbEjEHB0P2rZofDk2/WDLk72RNdEltM444H/2IT09RXTh4O9YW5blyR\nmsAUCAuWEdozV0fvPSb2Z3TebO3rpniGzG2JYPY7I1OYEg/pfpz05xNidjEz\nVczMrxlp60tZD2VnMc4u4MhnrqNEiOR3KfZAQZLpRA/tI+Zm6dv5F/hj1yKk\nNEMMXy9dG1K5uCvRwj/9ZZsOoL1+qlEj2PJhCkJGqUXaADrJQnbVjgi14B6O\nzNSjlQ6leNw3WWvpGKyTRd38SH2bRtzGbaV/M+FWSS+YekokFKdMnvvxu0jE\nxZlzesADaJLxocrPfL0+M1haYkhRsq44XZ3+o+ibAYP5SgBu6/FhvvGZ+Gz/\nP/yy\r\n=THas\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "f1676600fb7ef6203e86c7dc206b7ad508ff72e6",
  "homepage": "https://github.com/wechat-miniprogram/sm-crypto#readme",
  "jest": {
    "testEnvironment": "jsdom",
    "testURL": "https://jest.test",
    "collectCoverageFrom": [
      "src/**/*.js"
    ],
    "moduleDirectories": [
      "node_modules",
      "src"
    ]
  },
  "license": "MIT",
  "main": "miniprogram_dist/index.js",
  "maintainers": [
    {
      "name": "wechat-miniprogram",
      "email": "wx-miniprogram@qq.com"
    }
  ],
  "miniprogram": "miniprogram_dist",
  "name": "miniprogram-sm-crypto",
  "optionalDependencies": {},
  "readme": "# sm-crypto\n\n小程序 js 库。国密算法 sm2、sm3 和 sm4 的实现。\n\n> 使用此组件需要依赖小程序基础库 2.2.1 以上版本，同时依赖开发者工具的 npm 构建。具体详情可查阅[官方 npm 文档](https://developers.weixin.qq.com/miniprogram/dev/devtools/npm.html)。\n\n## 安装\n\n```bash\nnpm install --save miniprogram-sm-crypto\n```\n\n## sm2\n\n### 获取密钥对\n\n```js\nconst sm2 = require('miniprogram-sm-crypto').sm2;\n\nlet keypair = sm2.generateKeyPairHex();\n\npublicKey = keypair.publicKey; // 公钥\nprivateKey = keypair.privateKey; // 私钥\n```\n\n### 加密解密\n\n```js\nconst sm2 = require('miniprogram-sm-crypto').sm2;\nconst cipherMode = 1; // 1 - C1C3C2，0 - C1C2C3，默认为1\n\nlet encryptData = sm2.doEncrypt(msgString, publicKey, cipherMode); // 加密结果\nlet decryptData = sm2.doDecrypt(encryptData, privateKey, cipherMode); // 解密结果\n```\n\n### 签名验签\n\n> ps：理论上来说，只做纯签名是最快的。\n\n```js\nconst sm2 = require('miniprogram-sm-crypto').sm2;\n\n// 纯签名 + 生成椭圆曲线点\nlet sigValueHex = sm2.doSignature(msg, privateKey); // 签名\nlet verifyResult = sm2.doVerifySignature(msg, sigValueHex, publicKey); // 验签结果\n\n// 纯签名\nlet sigValueHex2 = sm2.doSignature(msg, privateKey, {\n    pointPool: [sm2.getPoint(), sm2.getPoint(), sm2.getPoint(), sm2.getPoint()], // 传入事先已生成好的椭圆曲线点，可加快签名速度\n}); // 签名\nlet verifyResult2 = sm2.doVerifySignature(msg, sigValueHex2, publicKey); // 验签结果\n\n// 纯签名 + 生成椭圆曲线点 + der编解码\nlet sigValueHex3 = sm2.doSignature(msg, privateKey, {\n    der: true,\n}); // 签名\nlet verifyResult3 = sm2.doVerifySignature(msg, sigValueHex3, publicKey, {\n    der: true,\n}); // 验签结果\n\n// 纯签名 + 生成椭圆曲线点 + sm3杂凑\nlet sigValueHex4 = sm2.doSignature(msg, privateKey, {\n    hash: true,\n}); // 签名\nlet verifyResult4 = sm2.doVerifySignature(msg, sigValueHex4, publicKey, {\n    hash: true,\n}); // 验签结果\n\n// 纯签名 + 生成椭圆曲线点 + sm3杂凑（不做公钥推导）\nlet sigValueHex5 = sm2.doSignature(msg, privateKey, {\n    hash: true,\n    publicKey, // 传入公钥的话，可以去掉sm3杂凑中推导公钥的过程，速度会比纯签名 + 生成椭圆曲线点 + sm3杂凑快\n});\nlet verifyResult5 = sm2.doVerifySignature(msg, sigValueHex5, publicKey, {\n    hash: true,\n    publicKey,\n});\n```\n\n### 获取椭圆曲线点\n\n```js\nconst sm2 = require('miniprogram-sm-crypto').sm2;\n\nlet poin = sm2.getPoint(); // 获取一个椭圆曲线点，可在sm2签名时传入\n```\n\n## sm3\n\n```js\nconst sm3 = require('miniprogram-sm-crypto').sm3;\n\nlet hashData = sm3('abc'); // 杂凑\n```\n\n## sm4\n\n### 加密\n\n```js\nconst sm4 = require('miniprogram-sm-crypto').sm4;\nconst key = [0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32, 0x10];\n\nlet encryptData = sm4.encrypt([0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32, 0x10], key); // 加密\n```\n\n### 解密\n\n```js\nconst sm4 = require('miniprogram-sm-crypto').sm4;\nconst key = [0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32, 0x10];\n\nlet decryptData = sm4.decrypt([0x68, 0x1e, 0xdf, 0x34, 0xd2, 0x06, 0x96, 0x5e, 0x86, 0xb3, 0xe9, 0x4f, 0x53, 0x6e, 0x42, 0x46], key); // 解密\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wechat-miniprogram/sm-crypto.git"
  },
  "scripts": {
    "build": "gulp",
    "clean": "gulp clean",
    "clean-dev": "gulp clean --develop",
    "coverage": "jest ./test/* --coverage --bail",
    "dev": "gulp dev --develop",
    "dist": "npm run build",
    "lint": "eslint \"src/**/*.js\" --fix",
    "lint-tools": "eslint \"tools/**/*.js\" --rule \"import/no-extraneous-dependencies: false\"",
    "test": "jest ./test/* --silent --bail",
    "watch": "gulp watch --develop --watch"
  },
  "version": "0.1.0"
}
